#!/usr/bin/env ruby
require "json"
require "open3"
require "pandoc_object_filters"

COMMENT = %(<!--Automatically generated by Pandoc -->).freeze

def github_comment
  pandoc_results = nil

  Open3.popen2("pandoc -f markdown_github -t json") do |stdin, stdout, wait_thr|
    stdin.write(COMMENT)
    stdin.close
    pandoc_results = stdout.read
    raise "Failure from pandoc while building replacement JSON!" unless wait_thr.value.success?
  end

  raise "Invalid results!" unless pandoc_results
  pandoc_results = JSON.parse(pandoc_results)
  pandoc_results = PandocObjectFilters::Element::Document.new(pandoc_results)
  pandoc_results = pandoc_results.contents

  if pandoc_results.is_a?(Array) && pandoc_results.size == 1
    pandoc_results.first
  else
    pandoc_results
  end
end

found = false

filter = PandocObjectFilters::Filter.new

filter.filter! do |element|
  next if found
  next unless filter.format == "markdown_github"
  found = true
  result = github_comment

  if result.is_a?(Array)
    result << element
  else
    [result, element]
  end
end
